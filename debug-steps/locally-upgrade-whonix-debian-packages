#!/bin/bash

# This file is part of Whonix
# Copyright (C) 2012 - 2013 adrelanos <adrelanos at riseup dot net>
# See the file COPYING for copying conditions.

set -x

true "Currently running script: $0"

TEMP_SCRIPTNAME="$0"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$MYDIR"
cd ..
cd help-steps

source pre
source variables

locally-upgrade-whonix-debian-packages() {
   trap "error_handler_unchroot_unprevent_unmount" ERR INT TERM

   if [ "$WHONIX_BUILD_USE_AUTO_LOCAL_SIGNING_KEY" = "1" ]; then
      if [ ! -f "$WHONIX_LOCAL_SIGNING_KEY_FOLDER"/done ]; then
         error "${red}${bold}$0 ERROR: "$WHONIX_LOCAL_SIGNING_KEY_FOLDER"/done does not exist. Most likely build-steps.d/1200_create-debian-packages has not been run yet.${reset}"
      fi
   fi

   ## Lockfile for whonixcheck.
   mkdir --parents "/var/run/whonix"
   chown --recursive user:user /var/run/whonix
   chmod --recursive o+w /var/run/whonix
   chmod --recursive g+w /var/run/whonix
   sudo -u user touch "/var/run/whonix/package_manager_lock"

   sync

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/mount-img
   #"$WHONIX_SOURCE_HELP_STEPS_FOLDER"/prevent-daemons-from-starting

   if [ "$CI" = "true" ]; then
      ## We should mount /etc/resolv.conf.backup to /etc/resolv.conf to make network functional.
      ## (Nonfunctional in the first place because we installed the /etc/resolv.conf from
      ##  whonix-gateway/workstation-files package and didn't reboot.)
      true "INFO $0: Not setting WHONIX_CHROOT_MOUNT_RESOLV_CONF to 0, because CI detected."
   else
      export WHONIX_CHROOT_MOUNT_RESOLV_CONF="0"
   fi
   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/chroot-img

   sync

   ## Sanity tests.
   $CHROOT $update_grub_bin -v
   $CHROOT sync

   sync

   ## backup exiting /etc/apt/sources.list, might be useful for bare metal users
   cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/apt/sources.list "$CHROOT_FOLDER"/etc/apt/sources.list.backup

   ## We have to manually fix /etc/apt/sources.list, because the list which comes with
   ## grml-debootstrap is incomplete (does not complain debian security repository) and points to 127.0.0.1.

   if [ "$CI" = "true" ]; then
      ## Workaround for Travis CI.
      ## This would mess up Ubuntu precise with Debian testing packages.
      true "INFO $0: Not using $WHONIX_SOURCE_FOLDER/whonix_shared/etc/apt/sources.list.whonix because CI detected."
   else
      ## This file doesn't include Whonix's APT repository.
      cp "$WHONIX_SOURCE_FOLDER/whonix_shared/etc/apt/sources.list.whonix" "$CHROOT_FOLDER/etc/apt/sources.list"
   fi

   cp "$WHONIX_SOURCE_FOLDER/whonix_shared/etc/apt/preferences.d/"* "$CHROOT_FOLDER/etc/apt/preferences.d/"

   cp "$WHONIX_SOURCE_FOLDER/whonix_shared/etc/apt/apt.conf.d/"* "$CHROOT_FOLDER/etc/apt/apt.conf.d/"

   if [ "$CI" = "true" ]; then
      # export, so create-local-temp-apt-repo can read it
      export whonix_build_no_upstream_sources_list="1"
   fi

   ## Implemented in help-steps/pre.
   maybe_enable_apt_cache

   sync

   ## Upgrade from regular repository.
   ## Out commented. Instructions leave that to the user. This is better,
   ## because this script would fail if some repository would not be reachable,
   ## such as torproject's Tor 0.2.4 apt repository.
   #if [ "$CI" = "true" ]; then
      #true "INFO $0: skipping apt-get update and apt-get dist-upgrade, because CI detected."
      #true "INFO $0: (Would try to upgrade using Ubuntu precising using /etc/apt/sources.list containing Debian testing.)"
   #else
      #$CHROOT apt-get $apt_timeout_opts update

      #$CHROOT apt-get $apt_timeout_opts --yes dist-upgrade
   #fi

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/create-local-temp-apt-repo

   ## Check if we are running on a Whonix-Gateway.
   if [ -f "/usr/share/whonix/whonix_gateway" ]; then
      true 'INFO: We are running on a Whonix-Gateway, setting UWT_DEV_PASSTHROUGH="0", ok.'

      ## Someone trying to update Whonix-Gateway from source code. By default,
      ## export UWT_DEV_PASSTHROUGH="1" has been set in help-steps/variables.
      ## This won't work from within an installed Whonix-Gateway, because it by
      ## design does not have functional system DNS.
      export UWT_DEV_PASSTHROUGH="0"
   fi

   ## Debugging.
   $CHROOT apt-key finger

   ## Reading [apt repository containing snapshot.debian.org and] local repository containing Whonix's packages.
   $CHROOT apt-get $apt_dir_opts $apt_timeout_opts $apt_verify_opts -o APT::Get::List-Cleanup="0" update

   ## Upgrade Whonix Debian Packages.
   $CHROOT apt-get $apt_dir_opts $apt_timeout_opts $apt_verify_opts --yes dist-upgrade

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/remove-local-temp-apt-repo

   ## Forget about local repository containing Whonix's packages.
   $CHROOT apt-get --no-download --list-cleanup update

   $CHROOT sync
   sync

   ## Implemented in help-steps/pre.
   disable_apt_cache

   ## Remove lockfile for whonixcheck.
   rm --force "/var/run/whonix/package_manager_lock"

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/unchroot-img
   #"$WHONIX_SOURCE_HELP_STEPS_FOLDER"/unprevent-daemons-from-starting
   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/unmount-img

   sync
}

true "${bold}INFO: Currently running script: $0${reset}"
locally-upgrade-whonix-debian-packages
true "${bold}INFO: End of: $0 No error detected.${reset}"
